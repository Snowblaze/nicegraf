<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__ngf" kind="group">
    <compoundname>ngf</compoundname>
    <title>Core C API</title>
    <innerclass refid="structngf__device__capabilities" prot="public">ngf_device_capabilities</innerclass>
    <innerclass refid="structngf__diagnostic__info" prot="public">ngf_diagnostic_info</innerclass>
    <innerclass refid="structngf__allocation__callbacks" prot="public">ngf_allocation_callbacks</innerclass>
    <innerclass refid="structngf__device" prot="public">ngf_device</innerclass>
    <innerclass refid="structngf__irect2d" prot="public">ngf_irect2d</innerclass>
    <innerclass refid="structngf__extent3d" prot="public">ngf_extent3d</innerclass>
    <innerclass refid="structngf__offset3d" prot="public">ngf_offset3d</innerclass>
    <innerclass refid="structngf__shader__stage__info" prot="public">ngf_shader_stage_info</innerclass>
    <innerclass refid="structngf__shader__stage" prot="public">ngf_shader_stage</innerclass>
    <innerclass refid="structngf__rasterization__info" prot="public">ngf_rasterization_info</innerclass>
    <innerclass refid="structngf__stencil__info" prot="public">ngf_stencil_info</innerclass>
    <innerclass refid="structngf__depth__stencil__info" prot="public">ngf_depth_stencil_info</innerclass>
    <innerclass refid="structngf__blend__info" prot="public">ngf_blend_info</innerclass>
    <innerclass refid="structngf__vertex__buf__binding__desc" prot="public">ngf_vertex_buf_binding_desc</innerclass>
    <innerclass refid="structngf__vertex__attrib__desc" prot="public">ngf_vertex_attrib_desc</innerclass>
    <innerclass refid="structngf__vertex__input__info" prot="public">ngf_vertex_input_info</innerclass>
    <innerclass refid="structngf__multisample__info" prot="public">ngf_multisample_info</innerclass>
    <innerclass refid="structngf__attachment__description" prot="public">ngf_attachment_description</innerclass>
    <innerclass refid="structngf__attachment__descriptions" prot="public">ngf_attachment_descriptions</innerclass>
    <innerclass refid="structngf__constant__specialization" prot="public">ngf_constant_specialization</innerclass>
    <innerclass refid="structngf__specialization__info" prot="public">ngf_specialization_info</innerclass>
    <innerclass refid="structngf__graphics__pipeline__info" prot="public">ngf_graphics_pipeline_info</innerclass>
    <innerclass refid="structngf__graphics__pipeline" prot="public">ngf_graphics_pipeline</innerclass>
    <innerclass refid="structngf__sampler__info" prot="public">ngf_sampler_info</innerclass>
    <innerclass refid="structngf__sampler" prot="public">ngf_sampler</innerclass>
    <innerclass refid="structngf__image__info" prot="public">ngf_image_info</innerclass>
    <innerclass refid="structngf__image" prot="public">ngf_image</innerclass>
    <innerclass refid="structngf__image__ref" prot="public">ngf_image_ref</innerclass>
    <innerclass refid="structngf__render__target__info" prot="public">ngf_render_target_info</innerclass>
    <innerclass refid="structngf__render__target" prot="public">ngf_render_target</innerclass>
    <innerclass refid="unionngf__clear__info" prot="public">ngf_clear_info</innerclass>
    <innerclass refid="structngf__pass__info" prot="public">ngf_pass_info</innerclass>
    <innerclass refid="structngf__buffer__info" prot="public">ngf_buffer_info</innerclass>
    <innerclass refid="structngf__buffer" prot="public">ngf_buffer</innerclass>
    <innerclass refid="structngf__buffer__bind__info" prot="public">ngf_buffer_bind_info</innerclass>
    <innerclass refid="structngf__image__sampler__bind__info" prot="public">ngf_image_sampler_bind_info</innerclass>
    <innerclass refid="structngf__resource__bind__op" prot="public">ngf_resource_bind_op</innerclass>
    <innerclass refid="structngf__swapchain__info" prot="public">ngf_swapchain_info</innerclass>
    <innerclass refid="structngf__context" prot="public">ngf_context</innerclass>
    <innerclass refid="structngf__context__info" prot="public">ngf_context_info</innerclass>
    <innerclass refid="structngf__cmd__buffer__info" prot="public">ngf_cmd_buffer_info</innerclass>
    <innerclass refid="structngf__cmd__buffer" prot="public">ngf_cmd_buffer</innerclass>
    <innerclass refid="structngf__render__encoder" prot="public">ngf_render_encoder</innerclass>
    <innerclass refid="structngf__xfer__encoder" prot="public">ngf_xfer_encoder</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ngf_1gab6fafd98f49fbcb76304780874986332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_get_device_list</definition>
        <argsstring>(const ngf_device **devices, uint32_t *ndevices)</argsstring>
        <name>ngf_get_device_list</name>
        <param>
          <type>const <ref refid="structngf__device" kindref="compound">ngf_device</ref> **</type>
          <declname>devices</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>ndevices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains a list of rendering devices available to nicegraf.</para>
<para>This function is not thread-safe. The devices are not returned in any particular order, and the order is not guaranteed to be the same every time the function is called. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>devices</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a pointer to <computeroutput>const</computeroutput> <ref refid="structngf__device" kindref="compound">ngf_device</ref>. If not <computeroutput>NULL</computeroutput>, this will be populated with a pointer to an array of <ref refid="structngf__device" kindref="compound">ngf_device</ref> instances, each containing data about a rendering device available to the system. Callers should not attempt to free the returned pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndevices</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a <computeroutput>uint32_t</computeroutput>. If not NULL, the number of available rendering devices shall be written to the memory pointed to by this parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1861" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1861" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga067147fcb8d461a23c9099c0fea5b605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_initialize</definition>
        <argsstring>(const ngf_init_info *init_info) NGF_NOEXCEPT</argsstring>
        <name>ngf_initialize</name>
        <param>
          <type>const <ref refid="structngf__init__info" kindref="compound">ngf_init_info</ref> *</type>
          <declname>init_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes nicegraf.</para>
<para>The client should call this function only once during the entire lifetime of the application. This function is not thread safe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>init_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1872" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1872" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga5689c89f5def935f949a03ec158fbf5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_create_context</definition>
        <argsstring>(const ngf_context_info *info, ngf_context *result) NGF_NOEXCEPT</argsstring>
        <name>ngf_create_context</name>
        <param>
          <type>const <ref refid="structngf__context__info" kindref="compound">ngf_context_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structngf__context" kindref="compound">ngf_context</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="structngf__context" kindref="compound">ngf_context</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>The context configuration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1881" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1881" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga8ba904bf2f053a20bd63cdcc34d8b5c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngf_destroy_context</definition>
        <argsstring>(ngf_context ctx) NGF_NOEXCEPT</argsstring>
        <name>ngf_destroy_context</name>
        <param>
          <type><ref refid="structngf__context" kindref="compound">ngf_context</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys the given <ref refid="structngf__context" kindref="compound">ngf_context</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1890" column="6" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1890" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga2c4bccb7d7e5bfbf06acb181966872f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_resize_context</definition>
        <argsstring>(ngf_context ctx, uint32_t new_width, uint32_t new_height) NGF_NOEXCEPT</argsstring>
        <name>ngf_resize_context</name>
        <param>
          <type><ref refid="structngf__context" kindref="compound">ngf_context</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjust the images associated with the given context&apos;s swapchain.</para>
<para>This function must be called every time that the window the context&apos;s presenting to is resized. It is up to the client application to detect the resize events and call this function. Not calling this function on resize results in undefined behavior.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to operate on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_width</parametername>
</parameternamelist>
<parameterdescription>
<para>New window client area width in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_height</parametername>
</parameternamelist>
<parameterdescription>
<para>New window client area height in pixels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1905" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1905" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1gaeb1e325adf6ca533050ea225e1895fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_set_context</definition>
        <argsstring>(ngf_context ctx) NGF_NOEXCEPT</argsstring>
        <name>ngf_set_context</name>
        <param>
          <type><ref refid="structngf__context" kindref="compound">ngf_context</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the given nicegraf context as current for the calling thread.</para>
<para>All subsequent rendering operations invoked from the calling thread shall affect the given context.</para>
<para>Once a context has been set as current on a thread, it cannot be migrated to another thread.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>The context to set as current. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1920" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1920" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1gad79ddd8fb25cee47494d89b5a25dccbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_begin_frame</definition>
        <argsstring>(ngf_frame_token *token) NGF_NOEXCEPT</argsstring>
        <name>ngf_begin_frame</name>
        <param>
          <type><ref refid="group__ngf_1gacb4c6ccc06f85f30379f5a1014d8ff37" kindref="member">ngf_frame_token</ref> *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Begin a frame of rendering.</para>
<para>This function starts a frame of rendering in the calling thread&apos;s current context. It generates a special token associated with the frame, which is required for recording command buffers (see <ref refid="nicegraf_8h_1a52027dd2cf70d4530d60edabe5a6019c" kindref="member">ngf_start_cmd_buffer</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="group__ngf_1gacb4c6ccc06f85f30379f5a1014d8ff37" kindref="member">ngf_frame_token</ref>. The generated frame token shall be returned here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1932" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1932" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1gabdc19420f2365a4d25d99d2ec92d3791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_end_frame</definition>
        <argsstring>(ngf_frame_token token) NGF_NOEXCEPT</argsstring>
        <name>ngf_end_frame</name>
        <param>
          <type><ref refid="group__ngf_1gacb4c6ccc06f85f30379f5a1014d8ff37" kindref="member">ngf_frame_token</ref></type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>End the current frame of rendering on the calling thread&apos;s context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame token generated by the corresponding preceding call to <ref refid="group__ngf_1gad79ddd8fb25cee47494d89b5a25dccbc" kindref="member">ngf_begin_frame</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1941" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1941" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga64f16281740125152672a7ce38f1a853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structngf__device__capabilities" kindref="compound">ngf_device_capabilities</ref> *</type>
        <definition>const ngf_device_capabilities * ngf_get_device_capabilities</definition>
        <argsstring>(void) NGF_NOEXCEPT</argsstring>
        <name>ngf_get_device_capabilities</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to an <ref refid="structngf__device__capabilities" kindref="compound">ngf_device_capabilities</ref> instance, or NULL, if no context is present on the calling thread. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1949" column="31" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1949" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga6b11af603327969158d78a1d7b63a402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_create_shader_stage</definition>
        <argsstring>(const ngf_shader_stage_info *info, ngf_shader_stage *result) NGF_NOEXCEPT</argsstring>
        <name>ngf_create_shader_stage</name>
        <param>
          <type>const <ref refid="structngf__shader__stage__info" kindref="compound">ngf_shader_stage_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structngf__shader__stage" kindref="compound">ngf_shader_stage</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new shader stage object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stages</parametername>
</parameternamelist>
<parameterdescription>
<para>Information required to construct the shader stage object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where the handle to the newly created object will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1960" column="1" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1960" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga4cdfd3d01bc3fad21af9eba68e3cb019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngf_destroy_shader_stage</definition>
        <argsstring>(ngf_shader_stage stage) NGF_NOEXCEPT</argsstring>
        <name>ngf_destroy_shader_stage</name>
        <param>
          <type><ref refid="structngf__shader__stage" kindref="compound">ngf_shader_stage</ref></type>
          <declname>stage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys the given shader stage.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the shader stage object to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1969" column="6" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1969" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1ga01f6e663642ece4213607e6197708f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref></type>
        <definition>ngf_error ngf_create_graphics_pipeline</definition>
        <argsstring>(const ngf_graphics_pipeline_info *info, ngf_graphics_pipeline *result) NGF_NOEXCEPT</argsstring>
        <name>ngf_create_graphics_pipeline</name>
        <param>
          <type>const <ref refid="structngf__graphics__pipeline__info" kindref="compound">ngf_graphics_pipeline_info</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="structngf__graphics__pipeline" kindref="compound">ngf_graphics_pipeline</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new graphics pipeline object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Information required to construct the graphics pipeline object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where the handle to the newly created object will be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1979" column="11" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1979" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__ngf_1gaba2355db1b71d7e526b2a2e719b12666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ngf_destroy_graphics_pipeline</definition>
        <argsstring>(ngf_graphics_pipeline pipeline) NGF_NOEXCEPT</argsstring>
        <name>ngf_destroy_graphics_pipeline</name>
        <param>
          <type><ref refid="structngf__graphics__pipeline" kindref="compound">ngf_graphics_pipeline</ref></type>
          <declname>pipeline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroys the given graphics pipeline object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the pipeline object to be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1990" column="6" declfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" declline="1990" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ngf_1gab2cb27fa97957925fc471eb90633d756" prot="public" static="no">
        <name>NGF_DEVICE_NAME_MAX_LENGTH</name>
        <initializer>(256u)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum length of a device&apos;s name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="324" column="9" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ngf_1ga7634ab295ada4ee1515e24b58ed268ac" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_diagnostic_log_verbosity</name>
        <enumvalue id="group__ngf_1ga7634ab295ada4ee1515e24b58ed268aca503727f2fed73fd180a8d22e3bddf3ff" prot="public">
          <name>NGF_DIAGNOSTICS_VERBOSITY_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Normal level, reports only severe errors. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7634ab295ada4ee1515e24b58ed268acac59c61cc428e4a93da30c989e9b87e46" prot="public">
          <name>NGF_DIAGNOSTICS_VERBOSITY_DETAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Recommended for debug builds, may induce performance overhead. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verbosity levels for the diagnostic message log. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="231" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="231" bodyend="236"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga73f485c050416fe7ae3f5286cc418295" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_diagnostic_message_type</name>
        <enumvalue id="group__ngf_1ga73f485c050416fe7ae3f5286cc418295aa70e8407af79ebca453f4fa05609b748" prot="public">
          <name>NGF_DIAGNOSTIC_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Informational message, not actionable. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga73f485c050416fe7ae3f5286cc418295a1f17cc66809804f63d34ecd032e7711a" prot="public">
          <name>NGF_DIAGNOSTIC_WARNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message warns of a potential issue with an API call. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga73f485c050416fe7ae3f5286cc418295accf8da1e63de333851b76a3016f2f9a4" prot="public">
          <name>NGF_DIAGNOSTIC_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message provides details of an API call failure or a severe performance issue. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of a diagnostic log entry. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="243" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="243" bodyend="249"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_error</name>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ada8ac38db8dbdd216ac79d27a97d798b3b" prot="public">
          <name>NGF_ERROR_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No error, operation finished successfully. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053adadd17b42301f6cc84bb9c52a2173575cb" prot="public">
          <name>NGF_ERROR_OUT_OF_MEM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host memory allocation failed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ada90b7ab7e308053d65e974e8113eb098a" prot="public">
          <name>NGF_ERROR_OBJECT_CREATION_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A call to the backend API that was supposed to create an object failed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ada76702d3a886bd9b3993ab145db667ec2" prot="public">
          <name>NGF_ERROR_OUT_OF_BOUNDS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The operation would have resulted in an out of bounds access. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053adadbc65a523916e3a11e9b8fe9b22c1186" prot="public">
          <name>NGF_ERROR_INVALID_FORMAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A format enumerator provided as part of an argument to the call is not valid in that context. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ada99cb11277b7ac0dc221022f4e9603690" prot="public">
          <name>NGF_ERROR_INVALID_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A size passed as part of an argument to the call is either too large or too small. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053adaa976ccdd90dcc84ce6d488db18d84618" prot="public">
          <name>NGF_ERROR_INVALID_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An enumerator passed as part of an argument to the call is not valid in that context. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ada8c6de603c28baa540ba7671b96bbbbac" prot="public">
          <name>NGF_ERROR_INVALID_OPERATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The routine did not complete successfully. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the error codes that nicegraf routines may return. See also <ref refid="group__ngf_1error-reporting" kindref="member">Error Reporting</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="376" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="376" bodyend="392"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga1d4c5d0fc2b02831d28914bb92cc40ad" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_stage_type</name>
        <enumvalue id="group__ngf_1ga1d4c5d0fc2b02831d28914bb92cc40adac0306080cb7e6337a2620296b842c31c" prot="public">
          <name>NGF_STAGE_VERTEX</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Indicates the vertex processing stage. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga1d4c5d0fc2b02831d28914bb92cc40adaf8ef9c6d445577ba7a80cd59254c827e" prot="public">
          <name>NGF_STAGE_FRAGMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Indicates the fragment processing stage. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga1d4c5d0fc2b02831d28914bb92cc40ada5bee7430d1d8673f99c07919d7b46283" prot="public">
          <name>NGF_STAGE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shader stage types. Note that some back-ends might not support all of these. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="434" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gab411421f89d976d54cb0d72b736ff517" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_polygon_mode</name>
        <enumvalue id="group__ngf_1gab411421f89d976d54cb0d72b736ff517ab4542baf873fa0a148f10d36dae7f4f8" prot="public">
          <name>NGF_POLYGON_MODE_FILL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fill entire polyoon. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gab411421f89d976d54cb0d72b736ff517a8b5b774cd9f3afb8e148900e92d0c23d" prot="public">
          <name>NGF_POLYGON_MODE_LINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Outline only. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gab411421f89d976d54cb0d72b736ff517a8a3ef145d23450a68690ca51fcb46e06" prot="public">
          <name>NGF_POLYGON_MODE_POINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vertices only. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gab411421f89d976d54cb0d72b736ff517ab24c5f0f3e679bec8784dd3b060e7727" prot="public">
          <name>NGF_POLYGON_MODE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates ways to draw polygons. See also <ref refid="structngf__rasterization__info" kindref="compound">ngf_rasterization_info</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="528" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="528" bodyend="533"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2b" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_cull_mode</name>
        <enumvalue id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2bace08b36931f91be08ab1b4e69717eb73" prot="public">
          <name>NGF_CULL_MODE_BACK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cull back-facing polygons. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2ba83d81edfe8ca53fcf0c403af99f6bd74" prot="public">
          <name>NGF_CULL_MODE_FRONT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cull front-facing polygons. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2ba56a77ee9c6000d8234f0eb4512aa1f13" prot="public">
          <name>NGF_CULL_MODE_FRONT_AND_BACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cull all polygons. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2bacc980598c9ec15cbabed7fac0318f52a" prot="public">
          <name>NGF_CULL_MODE_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Do not cull anything. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac58dd9a88f616e4b9822e2645cdbfb2bac0c40dea66f1b480b9886c5734bf956b" prot="public">
          <name>NGF_CULL_MODE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates polygon culling strategies. See also <ref refid="structngf__rasterization__info" kindref="compound">ngf_rasterization_info</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="542" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="542" bodyend="548"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gac78e26eae8830282edaedc5636120714" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_front_face_mode</name>
        <enumvalue id="group__ngf_1gac78e26eae8830282edaedc5636120714a85c1632cd0b13a746ffc049c6754a86a" prot="public">
          <name>NGF_FRONT_FACE_COUNTER_CLOCKWISE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Polygons with vertices in counter-clockwise order are considered front-facing. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac78e26eae8830282edaedc5636120714a733a148f2da5ea5d958116c467436ece" prot="public">
          <name>NGF_FRONT_FACE_CLOCKWISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Polygons with vertices in clockwise order are considered front-facing. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gac78e26eae8830282edaedc5636120714abfcb0ea52530afb50587137e40ed5dbb" prot="public">
          <name>NGF_FRONT_FACE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates possible vertex winding orders, which are used to decide which polygons are front- or back-facing. See also <ref refid="structngf__rasterization__info" kindref="compound">ngf_rasterization_info</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="557" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="557" bodyend="565"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342e" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_compare_op</name>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342eae4ab6ac80224dcffb6e06f29fbf3e2a6" prot="public">
          <name>NGF_COMPARE_OP_NEVER</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test never succeeds. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342eaa19ec9fd9da7657e9bc2d3da16e1daec" prot="public">
          <name>NGF_COMPARE_OP_LESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A &lt; B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea1b983b52262fca72e5b2201e4144702e" prot="public">
          <name>NGF_COMPARE_OP_LEQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A &lt;= B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea6cf7bbfadeb5c10e5c56630197d0ec1e" prot="public">
          <name>NGF_COMPARE_OP_EQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A == B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea854afe959ff0638efe70d56984648c5c" prot="public">
          <name>NGF_COMPARE_OP_GEQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A &gt;= B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea1621956ffe3dc6815a137a8ae1a60fb4" prot="public">
          <name>NGF_COMPARE_OP_GREATER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A &gt; B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea3128259c58b5974caf12fd535fb9f190" prot="public">
          <name>NGF_COMPARE_OP_NEQUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test succeeds if A != B. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342eae948919f53066c265bad60753eb10658" prot="public">
          <name>NGF_COMPARE_OP_ALWAYS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparison test always succeeds. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae7023890d9364d3f8aa87c0e7807342ea61e029c60f47b30075a164e498425de0" prot="public">
          <name>NGF_COMPARE_OP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare operations used in depth and stencil tests. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="585" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="585" bodyend="595"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70e" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_stencil_op</name>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70ea191b1db06028b6a43faf0b344f55bd9d" prot="public">
          <name>NGF_STENCIL_OP_KEEP</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Don&apos;t touch. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70ea7b3092f8c1611a1118fa9afd0565a22a" prot="public">
          <name>NGF_STENCIL_OP_ZERO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set to 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70eab32d2f1f369ef724fa2b68f9e11ac300" prot="public">
          <name>NGF_STENCIL_OP_REPLACE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Replace with reference value. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70eaff2a8d14fdf164fd3dec4d490c4cdec3" prot="public">
          <name>NGF_STENCIL_OP_INCR_CLAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Increment, clamping to max value. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70eabc175e7d23351e18f4648ffd049dda28" prot="public">
          <name>NGF_STENCIL_OP_INCR_WRAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Increment, wrapping to 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70ea264745a7002821448f4b71a329435c32" prot="public">
          <name>NGF_STENCIL_OP_DECR_CLAMP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Decrement, clamping to 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70ea0b623de5fe7bc3b196cc702e4aedd155" prot="public">
          <name>NGF_STENCIL_OP_DECR_WRAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Decrement, wrapping to max value. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70ea54699588d4076fb53d3e6618a1d93883" prot="public">
          <name>NGF_STENCIL_OP_INVERT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bitwise invert </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe59df51f356ebf0a6da4966ec0eb70eac338b661718f671f1917d1e735f4a3f8" prot="public">
          <name>NGF_STENCIL_OP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operations that can be performed on stencil buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="602" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="602" bodyend="612"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_blend_factor</name>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a05e0a125602eb50d013ac6cdde576b80" prot="public">
          <name>NGF_BLEND_FACTOR_ZERO</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: sets each color component to 0;</para>
</listitem><listitem><para>if used as a blend factor for alpha: sets alpha to 0. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82ad8718bfc8b969920bfed2b059492355f" prot="public">
          <name>NGF_BLEND_FACTOR_ONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: leaves the color unchanged;</para>
</listitem><listitem><para>if used as a blend factor for alpha: leaves the alpha value unchanged. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a28268db9df499033521f23f17bce14c0" prot="public">
          <name>NGF_BLEND_FACTOR_SRC_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by the corresponding component of the &quot;source&quot; color value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by the &quot;source&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a2b0b4165c0f12da1228ad2be0c6f301e" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_SRC_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by one minus the corresponding component of the &quot;source&quot; color value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by one minus the &quot;source&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a7e7981511408f96f533361c0ed589a04" prot="public">
          <name>NGF_BLEND_FACTOR_DST_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by the corresponding component of the &quot;destination&quot; color value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by the &quot;destination&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82ad5c3b51c9ce5f5d969c8af56a46029c8" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_DST_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by one minus the corresponding component of the &quot;destination&quot; color value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by one minus the &quot;destination&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82adb55b234557f0a7783136e35ad3e8fda" prot="public">
          <name>NGF_BLEND_FACTOR_SRC_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by the &quot;source&quot; alpha value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by the &quot;source&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82adc8afc2e8945bee876a61e9a6f56272d" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by one minus the &quot;source&quot; alpha value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by one minus the &quot;source&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82aad8f42e0fb437276ea1fecf3600346d2" prot="public">
          <name>NGF_BLEND_FACTOR_DST_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by the &quot;destination&quot; alpha value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by the &quot;destination&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a49fcc42b208c3552ae7b7557aee74b6b" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_DST_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies each color component by one minus the &quot;destination&quot; alpha value;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiples the alpha value by one minus the &quot;destination&quot; alpha value. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a37602a168c32f37dffccd2eb360f8515" prot="public">
          <name>NGF_BLEND_FACTOR_CONSTANT_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies the red, green and blue components of the color by the 1st, 2nd and 3rd elements of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref> respectively;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiplies the alpha value by the 4th component of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82ad560e75f31a7ec7998cb336a02bc2b3f" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies the red, green and blue components of the color by one minus the 1st, 2nd and 3rd elements of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref> respectively;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiplies the alpha value by one minus the 4th component of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a08010e2d97c46f0c857862b7557735a5" prot="public">
          <name>NGF_BLEND_FACTOR_CONSTANT_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies the components of the color by the 4th element of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiplies the alpha value by the 4th component of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82aeb51c0a3ae649296f327c6e585228588" prot="public">
          <name>NGF_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><itemizedlist>
<listitem><para>If used as a blend factor for color: multiplies the components of the color by one minus the 4th element of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>;</para>
</listitem><listitem><para>if used as a blend factor for alpha: multiplies the alpha value by one minus the 4th component of <ref refid="structngf__blend__info_1a61a8fd68fbbb553972bf3426745f9399" kindref="member">ngf_blend_info::blend_consts</ref>. </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82a43df1aa86a2008d60c91e99d9333af93" prot="public">
          <name>NGF_BLEND_FACTOR_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Factors that can be used for source and destination values during the blend operation. The factor can be thought See <ref refid="structngf__blend__info" kindref="compound">ngf_blend_info</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="685" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="685" bodyend="793"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga04782788330b1bf07c4c6328206386a6" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_blend_op</name>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6af0574648647d779caed27e8139f7f620" prot="public">
          <name>NGF_BLEND_OP_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The result of the blend operation shall be <computeroutput>S*Fs + D*Fd</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6a5d45f9d4f4f3e4aac93a1f0f7694be41" prot="public">
          <name>NGF_BLEND_OP_SUB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The result of the blend operation shall be <computeroutput>S*Fs - D*Fd</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6a8230dcf7b4e6336bfdf940d94a38f3ff" prot="public">
          <name>NGF_BLEND_OP_REV_SUB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The result of the blend operation shall be <computeroutput>D*Fd - S*Fs</computeroutput> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6a50f9cab76b5e44880b328b3e43b2d54e" prot="public">
          <name>NGF_BLEND_OP_MIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The result of the blend operation shall be <computeroutput>min(S, D)</computeroutput> <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6ad60bfc6845dfe344b0bde5cf02d43b9b" prot="public">
          <name>NGF_BLEND_OP_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The result of the blend operation shall be <computeroutput>max(S, D)</computeroutput> <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga04782788330b1bf07c4c6328206386a6a83b4010e0854a99a20efca1d15041d0a" prot="public">
          <name>NGF_BLEND_OP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operations that can be performed to blend the values computed by the fragment stage (source values, denoted <computeroutput>S</computeroutput> in the member documentation) with values already present in the target color attachment of the framebuffer (destination values, denoted <computeroutput>D</computeroutput> in the member documentation).</para>
<para>The factors (<ref refid="group__ngf_1ga7111d15881b99ea1372d4af5f0acda82" kindref="member">ngf_blend_factor</ref>) for the source and destination values are denoted as <computeroutput>Fs</computeroutput> and <computeroutput>Fd</computeroutput> respectively in the member documentation below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="807" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="807" bodyend="814"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_type</name>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8ab6a39e0a95eda430bfb729be90e02ae1" prot="public">
          <name>NGF_TYPE_INT8</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Signed 8-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a00304ae4b72b5a8a9ce4d946a3748558" prot="public">
          <name>NGF_TYPE_UINT8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unsigned 8-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a31996be448adf63b1c8d2a104ccf7c18" prot="public">
          <name>NGF_TYPE_INT16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Signed 16-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8ab33b9ddc72d88b48d1461964b51387a2" prot="public">
          <name>NGF_TYPE_UINT16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unsigned 16-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a2affe3abef69b1ae4fa1675d26c21825" prot="public">
          <name>NGF_TYPE_INT32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Signed 32-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a46f9ed208f47c6acf29a9605e862ae37" prot="public">
          <name>NGF_TYPE_UINT32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unsigned 32-bit integer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8aefddfaec8433530f5b4fbb255a7713b3" prot="public">
          <name>NGF_TYPE_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32-bit floating point number. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a85704ac5c4037b152f79eeda6d77c7c1" prot="public">
          <name>NGF_TYPE_HALF_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>16-bit floating point number. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8ab3ddc8639d625361bc86701d0a1553e5" prot="public">
          <name>NGF_TYPE_DOUBLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double-precision floating point number. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga01261322d7ece98dce30b32c477f7ad8a60c716eb1ca094d057be7bf001eadb39" prot="public">
          <name>NGF_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the available vertex attribute component types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="852" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="852" bodyend="863"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536f" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_sample_count</name>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fabbfc9d559e89f8a21f4bb7ad5707048c" prot="public">
          <name>NGF_SAMPLE_COUNT_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fa42432ed61c2d923ae0e61087b9d2e37d" prot="public">
          <name>NGF_SAMPLE_COUNT_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fabe7352c6eb6306feddd35af38d65c464" prot="public">
          <name>NGF_SAMPLE_COUNT_4</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fa2e90cf962d717494055c24f5e0948c39" prot="public">
          <name>NGF_SAMPLE_COUNT_8</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fa644147a7e90dda75f0908be0b4252398" prot="public">
          <name>NGF_SAMPLE_COUNT_16</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fa992f24ec1113091796add275224c4f27" prot="public">
          <name>NGF_SAMPLE_COUNT_32</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga99d00b2bf653c4605c4c505275e6536fa4e4760c94ed08df2f60ce2bebe789571" prot="public">
          <name>NGF_SAMPLE_COUNT_64</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies the number of MSAA samples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="996" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="996" bodyend="1004"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132a" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_image_format</name>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaef6b5ca07d86628913fbd0fefa3f34d8" prot="public">
          <name>NGF_IMAGE_FORMAT_R8</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa28ec1107cfac0eb13e2ac802e14c42bc" prot="public">
          <name>NGF_IMAGE_FORMAT_RG8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaaa34a174366a0c6572cef6d099b45f83" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aac9e43854548ff893318de543002ba554" prot="public">
          <name>NGF_IMAGE_FORMAT_RGBA8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa7c04e3ebbeee69594efab0f8c9b55d5d" prot="public">
          <name>NGF_IMAGE_FORMAT_SRGB8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa3a5397d56e94f08b3f8f95a88956b03f" prot="public">
          <name>NGF_IMAGE_FORMAT_SRGBA8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa33ea1dc9c9074d09812ef7c59b5e13af" prot="public">
          <name>NGF_IMAGE_FORMAT_BGR8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa4e6230c48c4aeb3dbd24d346754a9ef3" prot="public">
          <name>NGF_IMAGE_FORMAT_BGRA8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaa1518e28a9073baedb91b213f83aaacb" prot="public">
          <name>NGF_IMAGE_FORMAT_BGR8_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa0e902e5030a42ddcb67951a361bdcfb3" prot="public">
          <name>NGF_IMAGE_FORMAT_BGRA8_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa53613eaab7112badfbcc0bac29005a9b" prot="public">
          <name>NGF_IMAGE_FORMAT_R32F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aad80dfa9dc21ef17d1123f802eb6bcaf4" prot="public">
          <name>NGF_IMAGE_FORMAT_RG32F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa42ed7c338e7c2ab5d239fd45940484b9" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB32F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa289882c16c6bd00f945775bc65658640" prot="public">
          <name>NGF_IMAGE_FORMAT_RGBA32F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aadac247d905c631ecce15c0e5fc3e66ae" prot="public">
          <name>NGF_IMAGE_FORMAT_R16F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa9cebb63a1c795066fbd6e0b7e618f85c" prot="public">
          <name>NGF_IMAGE_FORMAT_RG16F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aafe8098a11a5fd920894be2c6563a86db" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB16F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa36180ab8687486ef1a5c3020d49e6189" prot="public">
          <name>NGF_IMAGE_FORMAT_RGBA16F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aadf67accf721487ef22d05b0b53258311" prot="public">
          <name>NGF_IMAGE_FORMAT_RG11B10F</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aad52d5862f3327de5dcf91fa763cf386e" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB9E5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa00d564ace5d94a99d98b65503c5b36ef" prot="public">
          <name>NGF_IMAGE_FORMAT_R16_UNORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aabc4c6a92d51c8b0eadea42e412b42f28" prot="public">
          <name>NGF_IMAGE_FORMAT_R16_SNORM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaf575697b1db0971adf8c79f73d059a89" prot="public">
          <name>NGF_IMAGE_FORMAT_R16U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa2dbdd0f2ea8688870db6949ddff7bd0e" prot="public">
          <name>NGF_IMAGE_FORMAT_R16S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaf5a8e1796bfd6882cf1ad6cf84e64644" prot="public">
          <name>NGF_IMAGE_FORMAT_RG16U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa3dc6c79ca5e7b40209f321207b68c386" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB16U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa6e4f57f9392f0efafef9fa3e77daa141" prot="public">
          <name>NGF_IMAGE_FORMAT_RGBA16U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaf70c91f17adb558b88835a6dbf77d254" prot="public">
          <name>NGF_IMAGE_FORMAT_R32U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa1b9f6f2bbec2d82abd98efb2d8560f86" prot="public">
          <name>NGF_IMAGE_FORMAT_RG32U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aad9d4c3fb86e75bffcb688010302decb1" prot="public">
          <name>NGF_IMAGE_FORMAT_RGB32U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaf1d017828c1bea5d128086d0a7674032" prot="public">
          <name>NGF_IMAGE_FORMAT_RGBA32U</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa98b2e1ff83b071b620bae1833099f463" prot="public">
          <name>NGF_IMAGE_FORMAT_BC7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aabc7b293fb3d61b937c438aed9cca104e" prot="public">
          <name>NGF_IMAGE_FORMAT_BC7_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa239eef44a4355eca601ff442c63e750c" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_4x4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa751aea0d34257721aa67c79d18a61006" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_4x4_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa68351de8a2ede3bf6de75a8288d9d613" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_5x4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa5e590ab0d9224fada3367cab1c74d656" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_5x4_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aae0a9c2eea21ea52fca7821e939c3c7f5" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_5x5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa400e033878b236300b4f8c253891b031" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_5x5_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa7b4a5227a5e7390c42225e1d354bc494" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_6x5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aad4aeae60d64871c277943a2d09dd1767" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_6x5_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa273d7e3655e6aea4b807295820d7865b" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_6x6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aab572fb9f31b28f21d03f1d0a54cfe396" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_6x6_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaebf8da239e0405988f939cca691fb96c" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa70b6e9979de597318defc0f87ec2cdc3" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x5_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aafa7f1dcc07d2c56c2853653997b66a1d" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa938bc3934ace5c527bb2d87d55d332d6" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x6_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aacfd0b729c001b2282d4f66cdd00cd49d" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaf8a02372bcd5a32656474d978109e4ab" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_8x8_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa998772b491acf97f2f6d6352d0736151" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa563d18a18e40668cb18e45c5f547262e" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x5_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa13e4ac6471c63d95299f0f2b7ddde5c4" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aaec8f4589900c271c876636d19d7e5496" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x6_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa0ad71f9d0665cc0f9f9206b04c86e4bb" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa24c366621017c1f762a32834aa46628f" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x8_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa17ba762f45f874c2db59ad98d8ae05f6" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa146bde12fa20d67c507fe534a66e3607" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_10x10_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aab046ac6870eccf2dd04a333fbd59afd3" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_12x10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aab2dc598fff441f1b2999433e0306fd3a" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_12x10_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aac24280582b615cee8d552caf5bc11f91" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_12x12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa0b18900add35c0cef9b77cd687640b62" prot="public">
          <name>NGF_IMAGE_FORMAT_ASTC_12x12_SRGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa8101192dcbc06027aff1caf64b8847f9" prot="public">
          <name>NGF_IMAGE_FORMAT_DEPTH32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aae93891dc08a019f5e2654269d12397a4" prot="public">
          <name>NGF_IMAGE_FORMAT_DEPTH16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aad865b7f0bed8246c90833d22343abb13" prot="public">
          <name>NGF_IMAGE_FORMAT_DEPTH24_STENCIL8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa7bdab0cfb40e438d0e2916b57878538e" prot="public">
          <name>NGF_IMAGE_FORMAT_UNDEFINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga48bf7488f4d5c9421491c8c0b955132aa039388508a8d91c9679cb27e95decafa" prot="public">
          <name>NGF_IMAGE_FORMAT_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Image formats.</para>
<para>Some backends may not support all of those. Using an sRGB format in a color attachment or swapchain image means that all color values output by the fragment stage are interpreted as being in linear color space, and an appropriate transfer function is applied to them to covert them to the sRGB colorspace before writing them to the target. Using an sRGB format in a sampled image means that all color values stored in the image are interpreted to be in the sRGB color space, and all read operations automatically apply a transfer function to convert the values from sRGB to linear color space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1033" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1033" bodyend="1100"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gae330c9a2dd7ef60b523e68f1f273135a" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_attachment_type</name>
        <enumvalue id="group__ngf_1gae330c9a2dd7ef60b523e68f1f273135aab188a950eecda313e02d6df8bd071403" prot="public">
          <name>NGF_ATTACHMENT_COLOR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>For attachments containing color data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae330c9a2dd7ef60b523e68f1f273135aab5212e206163c2f7e16d9e329fbf6b52" prot="public">
          <name>NGF_ATTACHMENT_DEPTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>For attachments containing depth data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gae330c9a2dd7ef60b523e68f1f273135aa21dde9ed482efc4f521ab3e71df2ad07" prot="public">
          <name>NGF_ATTACHMENT_DEPTH_STENCIL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>For attachments containing combined depth and stencil data. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates render target attachment types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1107" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1107" bodyend="1111"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cd" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_primitive_topology</name>
        <enumvalue id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cda4522a5528f33bc3576d1d765ae074d58" prot="public">
          <name>NGF_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A list of separate triangles - each three vertices define a separate triangle. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cda137862be96020af59267de3c5a215d57" prot="public">
          <name>NGF_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A list of connected triangles, with consecutive triangles sharing an edge like so: <programlisting><codeline><highlight class="normal">o---------o-----------o</highlight></codeline>
<codeline><highlight class="normal"><sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/><sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>\<sp/><sp/><sp/>/<sp/><sp/><sp/><sp/><sp/><sp/>\<sp/><sp/><sp/>/<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>o----------o</highlight></codeline>
</programlisting> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cda5f496f00ec5430a445dbf30b2b5fd6af" prot="public">
          <name>NGF_PRIMITIVE_TOPOLOGY_LINE_LIST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A list of separate lines. Each two vertices define a separate line. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cda2a99c0876cf4762c2048462053af7d25" prot="public">
          <name>NGF_PRIMITIVE_TOPOLOGY_LINE_STRIP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A list of connected lines. The end of a line is the beginning of the next line in the list. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga20e33fb5d8991ca17974bb3963a1a9cdaaf2a548ac90616c7ba0e94f7375d9bb5" prot="public">
          <name>NGF_PRIMITIVE_TOPOLOGY_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the available primitive topologies (ways to group vertices into primitives). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1147" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1147" bodyend="1175"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_descriptor_type</name>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835ae6b09eddb52389891d4ab2b282b69873" prot="public">
          <name>NGF_DESCRIPTOR_UNIFORM_BUFFER</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A uniform buffer, also known as a constant buffer, can be used to pass a small to medium sized chunk of data to the shader in a structured way. See also <ref refid="structngf__buffer" kindref="compound">ngf_buffer</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835aebd2570d7b1a8fa3a247cd43e58e8727" prot="public">
          <name>NGF_DESCRIPTOR_IMAGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An <ref refid="structngf__image" kindref="compound">ngf_image</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835aed13fc0d35dd9e94f92a498ea8478091" prot="public">
          <name>NGF_DESCRIPTOR_SAMPLER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An <ref refid="structngf__sampler" kindref="compound">ngf_sampler</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835a936f9e18629c082be14a63446f2a00f3" prot="public">
          <name>NGF_DESCRIPTOR_IMAGE_AND_SAMPLER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A combination of an image and sampler in a single object. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835ad51efeead738e9553ef2d7b9f9cf718f" prot="public">
          <name>NGF_DESCRIPTOR_TEXEL_BUFFER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A texel buffer can be used to pass a large amount of unstructured data (i.e. a big array of <computeroutput>float4</computeroutput>s) to the shader. See also <ref refid="structngf__buffer" kindref="compound">ngf_buffer</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8a0ef5b45413475065aa68cf8508b835af01fbc7be30e80997410acfd451ab574" prot="public">
          <name>NGF_DESCRIPTOR_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Available descriptor types. Not that some back-ends may not support all of the listed descriptor types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1261" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1261" bodyend="1291"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gabcde3381b55395f963eca78b2773283f" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_sampler_filter</name>
        <enumvalue id="group__ngf_1gabcde3381b55395f963eca78b2773283fadb28fc69660039c5ebf5deccae61bc9e" prot="public">
          <name>NGF_FILTER_NEAREST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pick the nearest value. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabcde3381b55395f963eca78b2773283fa3bdadc76704434ab8c4b9a5035e79b8d" prot="public">
          <name>NGF_FILTER_LINEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Linearly interpolate between the nearest values. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabcde3381b55395f963eca78b2773283fa439b891ab2e2602631a0c541062ec07e" prot="public">
          <name>NGF_FILTER_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates minification and magnification filters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1299" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1299" bodyend="1303"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga9e66e1eb316415e8793897338bdbd81e" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_sampler_wrap_mode</name>
        <enumvalue id="group__ngf_1ga9e66e1eb316415e8793897338bdbd81ea95a662a3df9173a19c94e961f86a3b11" prot="public">
          <name>NGF_WRAP_MODE_CLAMP_TO_EDGE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clamp the pixel value to what&apos;s at the edge of the image. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga9e66e1eb316415e8793897338bdbd81ea3e36c346c33431fc080132e720eaed70" prot="public">
          <name>NGF_WRAP_MODE_REPEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Repeat the image contents. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga9e66e1eb316415e8793897338bdbd81ea14cd2d2a59555b38ff302209d56de884" prot="public">
          <name>NGF_WRAP_MODE_MIRRORED_REPEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Repeat the image contents, mirrored. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga9e66e1eb316415e8793897338bdbd81ea50c1548daac37b1b2c43c457c7d6b03b" prot="public">
          <name>NGF_WRAP_MODE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What to do when sampling an image out-of-bounds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1311" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1311" bodyend="1316"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gad488948359d867a2c93c6fc0b50c9173" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_image_usage</name>
        <enumvalue id="group__ngf_1gad488948359d867a2c93c6fc0b50c9173a1453701fecbf3902d1f0259ceb473fab" prot="public">
          <name>NGF_IMAGE_USAGE_SAMPLE_FROM</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The image may be read from in a shader. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gad488948359d867a2c93c6fc0b50c9173a3ecd301fa3251a07eb3778904ab2fc61" prot="public">
          <name>NGF_IMAGE_USAGE_ATTACHMENT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The image may be used as an attachment for a render target. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gad488948359d867a2c93c6fc0b50c9173a328194f46df2a96823000c6d476e6ff6" prot="public">
          <name>NGF_IMAGE_USAGE_XFER_DST</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The image may be used as a destination for a transfer operation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gad488948359d867a2c93c6fc0b50c9173aa933e75ce3dbba4e44c8c472209ed8e7" prot="public">
          <name>NGF_IMAGE_USAGE_MIPMAP_GENERATION</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mipmaps may be generated for the image with <ref refid="nicegraf_8h_1a55a2a27dfc26e3d79d31df0ff0805bb6" kindref="member">ngf_cmd_generate_mipmaps</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Image usage flags. A valid image usage mask may be formed by combining one or more of these values with a bitwise OR operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1351" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1351" bodyend="1362"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga6c69d697d500e6f85fd9b3fe003f177b" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_image_type</name>
        <enumvalue id="group__ngf_1ga6c69d697d500e6f85fd9b3fe003f177ba5343fd7c187a40afe11397162737100b" prot="public">
          <name>NGF_IMAGE_TYPE_IMAGE_2D</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Two-dimensional image. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga6c69d697d500e6f85fd9b3fe003f177ba10161252c5145974d4379ece3f273904" prot="public">
          <name>NGF_IMAGE_TYPE_IMAGE_3D</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Three-dimensional image. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga6c69d697d500e6f85fd9b3fe003f177ba9712c8cfdf206c435bbe921111ba22f6" prot="public">
          <name>NGF_IMAGE_TYPE_CUBE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cubemap. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga6c69d697d500e6f85fd9b3fe003f177ba79576999bbbb75dd15f1ee0f4b9b3178" prot="public">
          <name>NGF_IMAGE_TYPE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the possible image types. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1369" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1369" bodyend="1374"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_cubemap_face</name>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0a85731d899977d0682d3fd0d34bcd1668" prot="public">
          <name>NGF_CUBEMAP_FACE_POSITIVE_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0a5e24919766f51d3134bdb1557da6917f" prot="public">
          <name>NGF_CUBEMAP_FACE_NEGATIVE_X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0a5e76684792cb5d06e8d301d190f1ffb9" prot="public">
          <name>NGF_CUBEMAP_FACE_POSITIVE_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0ab748faad044b8e478524ece4f5688e46" prot="public">
          <name>NGF_CUBEMAP_FACE_NEGATIVE_Y</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0ac7161b3891971c5f16d2ba14ac1c4bac" prot="public">
          <name>NGF_CUBEMAP_FACE_POSITIVE_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0a586e804a1a46578fdafe27a68e083fcf" prot="public">
          <name>NGF_CUBEMAP_FACE_NEGATIVE_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gacc2fb9fa76d71abcae842fa895e1c6d0a34e35969131a803a119ac3a089bfe4b0" prot="public">
          <name>NGF_CUBEMAP_FACE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Members of this enumeration are used to refer to the different faces of a cubemap. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1404" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1404" bodyend="1412"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gafe674efd40411229fb8f4b1757d337e1" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_attachment_load_op</name>
        <enumvalue id="group__ngf_1gafe674efd40411229fb8f4b1757d337e1a38008ecddba45629db9a607f238b398e" prot="public">
          <name>NGF_LOAD_OP_DONTCARE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Don&apos;t care what happens. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe674efd40411229fb8f4b1757d337e1afc1e9bbfaee309317e2e911f1415d73a" prot="public">
          <name>NGF_LOAD_OP_KEEP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Preserve the prior contents of the attachment. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe674efd40411229fb8f4b1757d337e1a3f6b389f886088b1d8ca0f69ddf50373" prot="public">
          <name>NGF_LOAD_OP_CLEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear the attachment. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gafe674efd40411229fb8f4b1757d337e1a914f10fecc8922bab01cab0d4c089f71" prot="public">
          <name>NGF_LOAD_OP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates actions that can be performed on attachment &quot;load&quot; (at the start of a render pass). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1475" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1475" bodyend="1480"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gab4a2ec1593a7dc69b50ebb6a134237e0" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_attachment_store_op</name>
        <enumvalue id="group__ngf_1gab4a2ec1593a7dc69b50ebb6a134237e0a07c3d1d05cbf8bd11e4f0cf8639d81fc" prot="public">
          <name>NGF_STORE_OP_DONTCARE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Don&apos;t care what happens. Use this if you don&apos;t plan on reading back the contents of the attachment in any shaders, or presenting it to screen. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gab4a2ec1593a7dc69b50ebb6a134237e0af8bf2aec3a89797cd27f8eb6ff322202" prot="public">
          <name>NGF_STORE_OP_STORE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use this if you plan on reading the contents of the attachment in any shaders or presenting it to screen. The contents of the attachment shall be written out to system memory. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gab4a2ec1593a7dc69b50ebb6a134237e0ac256ea17d766ca4daca6fc0fb1fa10b2" prot="public">
          <name>NGF_STORE_OP_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates actions that can be performed on attachment &quot;store&quot; (at the end of a render pass). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1487" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1487" bodyend="1501"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga8415050dbe6582bbb7dd038c3712277c" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_buffer_storage_type</name>
        <enumvalue id="group__ngf_1ga8415050dbe6582bbb7dd038c3712277caa1133e4913490414b2c8a8a5a0849592" prot="public">
          <name>NGF_BUFFER_STORAGE_HOST_READABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory that can be read by the host. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8415050dbe6582bbb7dd038c3712277cabbbf82f224f27c14bee5691228c9b614" prot="public">
          <name>NGF_BUFFER_STORAGE_HOST_WRITEABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory that can be written to by the host. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8415050dbe6582bbb7dd038c3712277cabac3191d61a3c294a512363b34a1f3a6" prot="public">
          <name>NGF_BUFFER_STORAGE_HOST_READABLE_WRITEABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory that can be both read from and written to by the host. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga8415050dbe6582bbb7dd038c3712277ca7eb92bbd9e9d7df9cf3d868e61b54a39" prot="public">
          <name>NGF_BUFFER_STORAGE_PRIVATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Private memory that cannot be accessed by the host directly. The contents of a buffer backed by this type of memory can only be modified by executing a ngf_cmd_copy_buffer. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates types of memory backing a buffer object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1546" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1546" bodyend="1569"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1gabc1d94f0d06bf458e3345d05558567ae" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_buffer_usage</name>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aea1eed2a0bc5fae403d090a61e3d71777d" prot="public">
          <name>NGF_BUFFER_USAGE_XFER_SRC</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be used as a source for transfer operations. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aeacdc2283292e5f3df16d018dc2c05fb24" prot="public">
          <name>NGF_BUFFER_USAGE_XFER_DST</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be used as a destination for transfer operations. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aea47ce3bad4a3a486a9b315a716a758286" prot="public">
          <name>NGF_BUFFER_USAGE_UNIFORM_BUFFER</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be bound as a uniform buffer. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aea3528e67460b81d2fac39fddde6663e5c" prot="public">
          <name>NGF_BUFFER_USAGE_INDEX_BUFFER</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be used as the source of index data for indexed draws. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aea72df4d25c1e8b814f186e9bcc9c5eb28" prot="public">
          <name>NGF_BUFFER_USAGE_VERTEX_BUFFER</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be used as a source of vertex attribute data. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1gabc1d94f0d06bf458e3345d05558567aeaa09342ffab225411a3dff51002504fea" prot="public">
          <name>NGF_BUFFER_USAGE_TEXEL_BUFFER</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The buffer may be bound as a uniform texel buffer. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the buffer usage flags. A valid buffer usage mask may be formed by combining a subset of these values with a bitwise OR operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1577" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1577" bodyend="1588"/>
      </memberdef>
      <memberdef kind="enum" id="group__ngf_1ga1fee3c1a4a2e46ea1215541acdb92f37" prot="public" static="no" strong="no">
        <type></type>
        <name>ngf_present_mode</name>
        <enumvalue id="group__ngf_1ga1fee3c1a4a2e46ea1215541acdb92f37ab1d03c3ecbcc2f07630f0e828955f3aa" prot="public">
          <name>NGF_PRESENTATION_MODE_FIFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This is the only presentation mode that is guaranteed to be supported. In this mode, the presentation requests are queued internally, and the presentation engine waits for the vertical blanking signal to present the image at the front of the queue. This mode guarantees no frame tearing. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ngf_1ga1fee3c1a4a2e46ea1215541acdb92f37aad8aeab9a3073978366f1bea301b2cf9" prot="public">
          <name>NGF_PRESENTATION_MODE_IMMEDIATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>In this mode, the presentation engine does not wait for the vertical blanking signal, instead presenting an image immediately. This mode results in lower latency but may induce frame tearing. It is not recommended to use this mode on mobile targets. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates possible presentation modes. &quot;Presentation mode&quot; refers to the particular way the CPU, GPU and the presentation engine interact. Some of the listed presentation modes may not be supported on various backend, hardware or OS combinations. If an unsupported mode is requested, nicegraf silently falls back onto <ref refid="nicegraf_8h_1ga1fee3c1a4a2e46ea1215541acdb92f37ab1d03c3ecbcc2f07630f0e828955f3aa" kindref="member">NGF_PRESENTATION_MODE_FIFO</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1656" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1656" bodyend="1672"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ngf_1ga93bf6330e6a48e0520aed9893ebc9f5e" prot="public" static="no">
        <type>uint32_t</type>
        <definition>ngf_device_handle</definition>
        <argsstring></argsstring>
        <name>ngf_device_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A handle that uniquely identifies a rendering device.</para>
<para>Note that the value of the handle corresponding to the same exact physical device may be different across different instances of the same client. In other words, if the client application shuts down, then starts up again, it may get different values for device handles than it did before. Therefore, device handles should not be persisted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="300" column="18" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ngf_1gacb4c6ccc06f85f30379f5a1014d8ff37" prot="public" static="no">
        <type>uint32_t</type>
        <definition>ngf_frame_token</definition>
        <argsstring></argsstring>
        <name>ngf_frame_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A token identifying a frame of rendering. See <ref refid="group__ngf_1gad79ddd8fb25cee47494d89b5a25dccbc" kindref="member">ngf_begin_frame</ref> and <ref refid="group__ngf_1gabdc19420f2365a4d25d99d2ec92d3791" kindref="member">ngf_end_frame</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="1838" column="18" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="1838" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This section contains the documentation for the core nicegraf routines, structures and enumerations.</para>
<sect2 id="group__ngf_1core-remarks">
<title>General Remarks</title>
<para><itemizedlist>
<listitem><para>The library is currently not intended to be linked dynamically.</para>
</listitem><listitem><para>When nicegraf&apos;s C headers are included from C++, all global functions within them are automatically declared to have C linkage. Additionally, they are declared to be noexcept.</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="group__ngf_1object-model">
<title>Object Model</title>
<para>nicegraf objects, such as images, buffers, render targets, etc., are represented using opaque handles. The objects are created and destroyed explicitly by the application, and it is the responsibility of the application to ensure a correct order of destruction.</para>
</sect2>
<sect2 id="group__ngf_1error-reporting">
<title>Error Reporting</title>
<para>Most nicegraf routines report their completion status by returning an <ref refid="group__ngf_1ga0cf1ffd267fbb5a398934dc6827053ad" kindref="member">ngf_error</ref>, and write their results to out-parameters. The returned value is a generic error code. Detailed, human-readable information about errors may vary from platform to platform; nicegraf reports it by invoking a user-provided callback function (see <ref refid="structngf__diagnostic__info" kindref="compound">ngf_diagnostic_info</ref>). The callback function must accept the diagnostic message type (see <ref refid="group__ngf_1ga73f485c050416fe7ae3f5286cc418295" kindref="member">ngf_diagnostic_message_type</ref>), an arbitrary void pointer (the value of which the user may specify when providing the callback), a printf-style format string, and an arbitrary number of arguments specifying the data for the format-string.</para>
</sect2>
<sect2 id="group__ngf_1host-memory-management">
<title>Host Memory Management</title>
<para>By default, nicegraf uses the standard malloc/free to manage host memory for internal purposes. The client may override this behavior by supplying custom memory allocation callbacks (see <ref refid="structngf__allocation__callbacks" kindref="compound">ngf_allocation_callbacks</ref>).</para>
</sect2>
<sect2 id="group__ngf_1gpu-memory-management">
<title>GPU Memory Management</title>
<para>nicegraf internally manages GPU memory for all backends. It is currently not possible for clients to override this behavior and do their own GPU memory management. </para>
</sect2>
    </detaileddescription>
  </compounddef>
</doxygen>
