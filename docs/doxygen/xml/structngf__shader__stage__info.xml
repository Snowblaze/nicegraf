<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structngf__shader__stage__info" kind="struct" language="C++" prot="public">
    <compoundname>ngf_shader_stage_info</compoundname>
    <includes refid="nicegraf_8h" local="no">nicegraf.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structngf__shader__stage__info_1a32bb2058db81dcd9d6bd365d4fb2bc27" prot="public" static="no" mutable="no">
        <type><ref refid="group__ngf_1ga1d4c5d0fc2b02831d28914bb92cc40ad" kindref="member">ngf_stage_type</ref></type>
        <definition>ngf_stage_type ngf_shader_stage_info::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stage type (vert/frag/etc.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="448" column="18" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structngf__shader__stage__info_1a456425c00d87d3c485135ce41d8db8b1" prot="public" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* ngf_shader_stage_info::content</definition>
        <argsstring></argsstring>
        <name>content</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This shall be a pointer to a memory buffer containing the code for the shader stage.</para>
<para>The specific contents of the buffer depend on which backend nicegraf is being used with:<itemizedlist>
<listitem><para>for the Vulkan backend, nicegraf expects the SPIR-V bytecode for the shader stage.</para>
</listitem><listitem><para>for the Metal backend, nicegraf expects the source code for the shader stage in the Metal Shading Language.</para>
</listitem></itemizedlist>
</para>
<para>Additionally, the Metal backend expects the code to contain a special comment, mapping all &lt;descriptor set, binding&gt; pairs to the native Metal argument table slots. The comment shall be a C-style block comment - beginning with a forward slash, followed by an asterisk - containing the following word:</para>
<para><programlisting><codeline><highlight class="normal">NGF_NATIVE_BINDING_MAP</highlight></codeline>
</programlisting></para>
<para>followed by a newline character.</para>
<para>Each of the following lines until the end of the comment shall have the following format:</para>
<para><programlisting><codeline><highlight class="normal">(s<sp/>b)<sp/>:<sp/>m</highlight></codeline>
</programlisting></para>
<para>where <computeroutput>s</computeroutput> is the set number, <computeroutput>b</computeroutput> is the binding number within the set, and <computeroutput>m</computeroutput> is the index of the corresponding resource in Metal&apos;s argument table.</para>
<para>For example, let&apos;s say the Metal shader refers to index 3 in the texture argument table. Adding the following line to the binding map comment</para>
<para><programlisting><codeline><highlight class="normal">(0<sp/>1)<sp/>:<sp/>3</highlight></codeline>
</programlisting></para>
<para>would tell the nicegraf metal backend to use the third slot of the texture argument table when an image is bound to set 0, binding 1 using <ref refid="nicegraf_8h_1a500a2c255a8a858a9693cada1882b403" kindref="member">ngf_cmd_bind_resources</ref>.</para>
<para>When compiling HLSL shaders using nicegraf-shaderc, the comment with the binding map is generated automatically. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="493" column="14" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structngf__shader__stage__info_1ab9ea958a2085f765ab8ad5b7bf54ac02" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t ngf_shader_stage_info::content_length</definition>
        <argsstring></argsstring>
        <name>content_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of bytes in the <ref refid="structngf__shader__stage__info_1a456425c00d87d3c485135ce41d8db8b1" kindref="member">ngf_shader_stage_info::content</ref> buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="496" column="15" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structngf__shader__stage__info_1ab429988b9306070a40ae751881d8e158" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ngf_shader_stage_info::debug_name</definition>
        <argsstring></argsstring>
        <name>debug_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional name, will appear in debug logs, may be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="497" column="14" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structngf__shader__stage__info_1a69d7f1325d4810c7296674623db36290" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ngf_shader_stage_info::entry_point_name</definition>
        <argsstring></argsstring>
        <name>entry_point_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Entry point name for this shader stage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="498" column="14" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Describes a programmable shader stage. </para>
    </detaileddescription>
    <location file="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" line="447" column="1" bodyfile="C:/Users/nicebyte/home/TERMINAL/nicegraf/include/nicegraf.h" bodystart="447" bodyend="499"/>
    <listofallmembers>
      <member refid="structngf__shader__stage__info_1a456425c00d87d3c485135ce41d8db8b1" prot="public" virt="non-virtual"><scope>ngf_shader_stage_info</scope><name>content</name></member>
      <member refid="structngf__shader__stage__info_1ab9ea958a2085f765ab8ad5b7bf54ac02" prot="public" virt="non-virtual"><scope>ngf_shader_stage_info</scope><name>content_length</name></member>
      <member refid="structngf__shader__stage__info_1ab429988b9306070a40ae751881d8e158" prot="public" virt="non-virtual"><scope>ngf_shader_stage_info</scope><name>debug_name</name></member>
      <member refid="structngf__shader__stage__info_1a69d7f1325d4810c7296674623db36290" prot="public" virt="non-virtual"><scope>ngf_shader_stage_info</scope><name>entry_point_name</name></member>
      <member refid="structngf__shader__stage__info_1a32bb2058db81dcd9d6bd365d4fb2bc27" prot="public" virt="non-virtual"><scope>ngf_shader_stage_info</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
